<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解扫描功能-->
    <context:annotation-config></context:annotation-config>
    <!--定义注解扫描的包-->
    <context:component-scan base-package="com.qy.dao"></context:component-scan>
    <context:component-scan base-package="com.qy.service"></context:component-scan>
    <context:component-scan base-package="com.qy.domain"></context:component-scan>
    <!--开启aop自动代理模式-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--从上下文环境中读取db.properties配置文件-->
    <context:property-placeholder location="classpath*:db.properties" ></context:property-placeholder>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${dbcp.driverClassName}"></property>
        <property name="url" value="${dbcp.url}"></property>
        <property name="username" value="${dbcp.username}"></property>
        <property name="password" value="${dbcp.password}"></property>
        <property name="maxActive" value="${dbcp.maxActive}"></property>
        <property name="initialSize" value="${dbcp.initialSize}"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!--配置Hibernate的SessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--指定当前会话工厂使用的数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>-->

        <!--指定实体类的位置-->
        <property name="packagesToScan"  value="com.qy.domain"/>

        <property name="hibernateProperties">
            <value>
                <!--设置方言-->
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                <!--显示sql语句和设置格式-->
                hibernate.show_sql=true
                hibernate.format_sql=true
                <!--使用二级缓存-->
                hibernate.cache.use_second_level_cache=true
                <!--配置二级缓存服务商-->
                hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
                <!--配置查询缓存-->
                name="cache.use_query_cache=true
            </value>
        </property>
    </bean>

    <!--配置HibernateTemplate-->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--配置spring的声明性事务-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <!--要根据hibernate的版本配置-->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--配置事务属性-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="re*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="NOT_SUPPORTED"/>
        </tx:attributes>

    </tx:advice>
    <!--配置事务的切入点-->
    <aop:config>
        <aop:pointcut id="pointCut" expression="execution(* com.qy.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
    </aop:config>

</beans>